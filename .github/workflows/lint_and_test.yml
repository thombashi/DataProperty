name: CI

on:
  push:
    paths-ignore:
      - 'misc/**'
      - '.gitignore'
      - 'README.rst'
  pull_request:
    paths-ignore:
      - 'misc/**'
      - '.gitignore'
      - 'README.rst'

env:
  PYTEST_DISCORD_WEBHOOK: ${{ secrets.PYTEST_DISCORD_WEBHOOK }}

jobs:
  build-package:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-build
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v3

      - run: make build

  lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-lint
      cancel-in-progress: true
    timeout-minutes: 20
    container:
      image: ghcr.io/thombashi/python-ci:3.11

    steps:
      - uses: actions/checkout@v3

      - name: Lint
        run: make check

  unit-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.8']
        os: [ubuntu-latest, macos-latest, windows-latest]
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-ut-${{ matrix.os }}-${{ matrix.python-version }}
      cancel-in-progress: true
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - name: Install pip
        run: python -m pip install --upgrade --disable-pip-version-check "pip>=21.1"

      - name: Install dependencies
        run: make setup-ci

      - run: tox -e py

  coverage:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-${{ github.ref_name }}-coverage
      cancel-in-progress: true
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt
            tox.ini

      - name: Install dependencies
        run: make setup-ci

      - run: tox -e cov
          # tox -e cov -- --discord-verbose=0  # reduce verbosity level of summary that send to discord

      - name: Upload coverage report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pip install --upgrade --disable-pip-version-check coveralls tomli
          coveralls --service=github

  smoke-examples:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.event_name }}-${{ github.workflow }}-ex-${{ github.ref_name }}
      cancel-in-progress: true
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: |
            setup.py
            **/*requirements.txt

      - name: Install dependencies
        run: python -m pip install --upgrade --disable-pip-version-check . jupyter

      - name: Run tests
        run: |
          set -eux

          for f in examples/py/*.py; do
            python "$f"
          done

          for f in examples/ipynb/*.ipynb; do
            jupyter execute "$f"
          done
